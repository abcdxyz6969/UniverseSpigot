name: Build Paper

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled

jobs:
  build:
    if: >
      (
        github.event_name == 'push'
        || (
          github.event_name == 'pull_request'
          && github.repository != github.event.pull_request.head.repo.full_name
          && contains(fromJSON('["opened", "reopened", "synchronize"]'), github.event.action)
        )
        || (
          github.event_name == 'pull_request'
          && github.event.action == 'labeled'
          && github.event.label.name == 'build-pr-jar'
        )
      )

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [21]
      fail-fast: true

    steps:
      - name: Checkout (Push)
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v4

      - name: Checkout (PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Determine Build Mode
        id: determine
        uses: actions/github-script@v7
        with:
          script: |
            const event = context.payload;
            const refType = context.ref_type;
            const refName = context.ref_name;
            const { owner, repo } = context.repo;

            let result = {
              action: "build",
              pr: null
            };

            if (context.eventName === "push" && refType === "branch") {
              const pulls = await github.rest.pulls.list({
                owner,
                repo,
                head: `${owner}:${refName}`,
                state: "open"
              });
              const match = pulls.data.find(pr => pr.labels.some(l => l.name === "build-pr-jar"));
              if (match) {
                result.action = "paperclip";
                result.pr = match.number;
              }
            } else if (context.eventName === "pull_request" && event.pull_request.labels.some(l => l.name === "build-pr-jar")) {
              result.action = "paperclip";
              result.pr = event.pull_request.number;
            }

            core.setOutput("result", JSON.stringify(result));
            core.notice(`Build mode: ${result.action}`);
          result-encoding: string

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Apply Patches
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "GitHub Actions"
          ./gradlew applyPatches --stacktrace

      - name: Build
        run: ./gradlew build --stacktrace

      - name: Create Mojmap Paperclip Jar
        if: ${{ fromJSON(steps.determine.outputs.result).action == 'paperclip' }}
        run: ./gradlew createMojmapPaperclipJar --stacktrace

      - name: Move Output to /builds
        if: ${{ fromJSON(steps.determine.outputs.result).action == 'paperclip' }}
        run: |
          mkdir -p builds
          cp paper-server/build/libs/paper-paperclip-*-mojmap.jar builds/ || echo "Jar not found"

      - name: Upload Artifact (Paperclip Jar)
        if: ${{ fromJSON(steps.determine.outputs.result).action == 'paperclip' }}
        uses: actions/upload-artifact@v4
        with:
          name: paperclip-${{ fromJSON(steps.determine.outputs.result).pr }}
          path: builds/

      - name: Create Pre-Release
        if: ${{ fromJSON(steps.determine.outputs.result).action == 'paperclip' }}
        uses: softprops/action-gh-release@v2
        with:
          name: Paperclip PR #${{ fromJSON(steps.determine.outputs.result).pr }}
          tag_name: pr-${{ fromJSON(steps.determine.outputs.result).pr }}-${{ github.run_number }}
          prerelease: true
          files: builds/*

  event_file:
    name: "Event File"
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Upload GitHub Event File
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
